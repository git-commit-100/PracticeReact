{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nfunction useInput(validateValue) {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isInputTouched, setIsInputTouched] = useState(false);\n  let isInputValid = validateValue(inputValue);\n\n  function handleInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleInputBlur(e) {\n    setIsInputTouched(true);\n  }\n\n  function resetInput() {\n    setInputValue(\"\");\n    setIsInputTouched(false);\n  }\n\n  return {\n    inputValue,\n    isInputTouched,\n    handleInputChange,\n    handleInputBlur,\n    isInputValid,\n    resetInput\n  };\n}\n\n_s(useInput, \"TC78UpAviHAXb1O6xoTwyGH8XKc=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/hooks/useInput.js"],"names":["useState","useInput","validateValue","inputValue","setInputValue","isInputTouched","setIsInputTouched","isInputValid","handleInputChange","e","target","value","handleInputBlur","resetInput"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AAEA,MAAIO,YAAY,GAAGL,aAAa,CAACC,UAAD,CAAhC;;AAEA,WAASK,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BL,IAAAA,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD;;AAED,WAASC,eAAT,CAAyBH,CAAzB,EAA4B;AAC1BH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AAED,WAASO,UAAT,GAAsB;AACpBT,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,SAAO;AACLH,IAAAA,UADK;AAELE,IAAAA,cAFK;AAGLG,IAAAA,iBAHK;AAILI,IAAAA,eAJK;AAKLL,IAAAA,YALK;AAMLM,IAAAA;AANK,GAAP;AAQD;;GA3BQZ,Q;;AA6BT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useInput(validateValue) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isInputTouched, setIsInputTouched] = useState(false);\r\n\r\n  let isInputValid = validateValue(inputValue);\r\n\r\n  function handleInputChange(e) {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  function handleInputBlur(e) {\r\n    setIsInputTouched(true);\r\n  }\r\n\r\n  function resetInput() {\r\n    setInputValue(\"\");\r\n    setIsInputTouched(false);\r\n  }\r\n\r\n  return {\r\n    inputValue,\r\n    isInputTouched,\r\n    handleInputChange,\r\n    handleInputBlur,\r\n    isInputValid,\r\n    resetInput,\r\n  };\r\n}\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}