{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartItemsSlice = createSlice({\n  name: \"cartItemsSlice\",\n  initialState: {\n    items: [\n      /* {id:\"\" ,name: \"\", price: \"\", quantity: \"\"} */\n    ],\n    totalQuantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const itemToBeAdded = action.payload;\n      const doItemExist = state.items.find(item => item.id === itemToBeAdded.id);\n\n      if (!doItemExist) {\n        state.items.push(itemToBeAdded);\n        state.totalQuantity = state.totalQuantity + itemToBeAdded.quantity;\n        state.totalPrice = state.totalPrice + itemToBeAdded.price;\n      } else {\n        console.table(doItemExist);\n      }\n    },\n\n    removeItemFromCart() {}\n\n  }\n});\nexport const cartItemsActions = cartItemsSlice.actions;\nexport default cartItemsSlice;","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/Practice React/src/store/cartItemsSlice.js"],"names":["createSlice","cartItemsSlice","name","initialState","items","totalQuantity","totalPrice","reducers","addItemToCart","state","action","itemToBeAdded","payload","doItemExist","find","item","id","push","quantity","price","console","table","removeItemFromCart","cartItemsActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,cAAc,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,gBAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AACL;AADK,KADK;AAIZC,IAAAA,aAAa,EAAE,CAJH;AAKZC,IAAAA,UAAU,EAAE;AALA,GAFmB;AASjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,aAAa,GAAGD,MAAM,CAACE,OAA7B;AACA,YAAMC,WAAW,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CACjBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,aAAa,CAACK,EADlB,CAApB;;AAGA,UAAI,CAACH,WAAL,EAAkB;AAChBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiBN,aAAjB;AACAF,QAAAA,KAAK,CAACJ,aAAN,GAAsBI,KAAK,CAACJ,aAAN,GAAsBM,aAAa,CAACO,QAA1D;AACAT,QAAAA,KAAK,CAACH,UAAN,GAAmBG,KAAK,CAACH,UAAN,GAAmBK,aAAa,CAACQ,KAApD;AACD,OAJD,MAIO;AACLC,QAAAA,OAAO,CAACC,KAAR,CAAcR,WAAd;AACD;AACF,KAbO;;AAcRS,IAAAA,kBAAkB,GAAG,CAAE;;AAdf;AATuB,CAAD,CAAlC;AA2BA,OAAO,MAAMC,gBAAgB,GAAGtB,cAAc,CAACuB,OAAxC;AAEP,eAAevB,cAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartItemsSlice = createSlice({\r\n  name: \"cartItemsSlice\",\r\n  initialState: {\r\n    items: [\r\n      /* {id:\"\" ,name: \"\", price: \"\", quantity: \"\"} */\r\n    ],\r\n    totalQuantity: 0,\r\n    totalPrice: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const itemToBeAdded = action.payload;\r\n      const doItemExist = state.items.find(\r\n        (item) => item.id === itemToBeAdded.id\r\n      );\r\n      if (!doItemExist) {\r\n        state.items.push(itemToBeAdded);\r\n        state.totalQuantity = state.totalQuantity + itemToBeAdded.quantity;\r\n        state.totalPrice = state.totalPrice + itemToBeAdded.price;\r\n      } else {\r\n        console.table(doItemExist);\r\n      }\r\n    },\r\n    removeItemFromCart() {},\r\n  },\r\n});\r\n\r\nexport const cartItemsActions = cartItemsSlice.actions;\r\n\r\nexport default cartItemsSlice;\r\n"]},"metadata":{},"sourceType":"module"}