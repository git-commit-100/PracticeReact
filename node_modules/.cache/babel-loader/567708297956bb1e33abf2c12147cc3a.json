{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst cartItemsSlice = createSlice({\n  name: \"cartItemsSlice\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const itemToBeAdded = action.payload;\n      const doesItemExist = state.items.find(item => item.id === itemToBeAdded.id);\n\n      if (!doesItemExist) {\n        state.items.push(itemToBeAdded);\n      } else {\n        const indexOfItem = current(state).items.findIndex(item => item.id === itemToBeAdded.id);\n        state.items[indexOfItem].quantity++;\n      }\n\n      state.totalQuantity++;\n      state.totalPrice = state.totalPrice + itemToBeAdded.price;\n    },\n\n    removeItemFromCart(state, action) {\n      const itemToBeRemoved = action.payload;\n      const indexOfItem = state.items.findIndex(item => item.id === itemToBeRemoved.id);\n\n      if (state.items[indexOfItem].quantity === 1) {\n        state.items = state.items.filter(item => item.id !== itemToBeRemoved.id);\n      } else {\n        state.items[indexOfItem].quantity--;\n      }\n\n      state.totalQuantity--;\n      state.totalPrice = state.totalPrice - itemToBeRemoved.price;\n    }\n\n  }\n});\nexport const cartItemsActions = cartItemsSlice.actions;\nexport default cartItemsSlice;","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/Practice React/src/store/cartItemsSlice.js"],"names":["createSlice","current","cartItemsSlice","name","initialState","items","totalQuantity","totalPrice","reducers","addItemToCart","state","action","itemToBeAdded","payload","doesItemExist","find","item","id","push","indexOfItem","findIndex","quantity","price","removeItemFromCart","itemToBeRemoved","filter","cartItemsActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,gBAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAFmB;AAOjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,aAAa,GAAGD,MAAM,CAACE,OAA7B;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CACnBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,aAAa,CAACK,EADhB,CAAtB;;AAGA,UAAI,CAACH,aAAL,EAAoB;AAClBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiBN,aAAjB;AACD,OAFD,MAEO;AACL,cAAMO,WAAW,GAAGlB,OAAO,CAACS,KAAD,CAAP,CAAeL,KAAf,CAAqBe,SAArB,CACjBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,aAAa,CAACK,EADlB,CAApB;AAGAP,QAAAA,KAAK,CAACL,KAAN,CAAYc,WAAZ,EAAyBE,QAAzB;AACD;;AACDX,MAAAA,KAAK,CAACJ,aAAN;AACAI,MAAAA,KAAK,CAACH,UAAN,GAAmBG,KAAK,CAACH,UAAN,GAAmBK,aAAa,CAACU,KAApD;AACD,KAhBO;;AAiBRC,IAAAA,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMa,eAAe,GAAGb,MAAM,CAACE,OAA/B;AACA,YAAMM,WAAW,GAAGT,KAAK,CAACL,KAAN,CAAYe,SAAZ,CACjBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,eAAe,CAACP,EADpB,CAApB;;AAGA,UAAIP,KAAK,CAACL,KAAN,CAAYc,WAAZ,EAAyBE,QAAzB,KAAsC,CAA1C,EAA6C;AAC3CX,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CACXT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,eAAe,CAACP,EAD1B,CAAd;AAGD,OAJD,MAIO;AACLP,QAAAA,KAAK,CAACL,KAAN,CAAYc,WAAZ,EAAyBE,QAAzB;AACD;;AACDX,MAAAA,KAAK,CAACJ,aAAN;AACAI,MAAAA,KAAK,CAACH,UAAN,GAAmBG,KAAK,CAACH,UAAN,GAAmBiB,eAAe,CAACF,KAAtD;AACD;;AA/BO;AAPuB,CAAD,CAAlC;AA0CA,OAAO,MAAMI,gBAAgB,GAAGxB,cAAc,CAACyB,OAAxC;AAEP,eAAezB,cAAf","sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst cartItemsSlice = createSlice({\r\n  name: \"cartItemsSlice\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    totalPrice: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const itemToBeAdded = action.payload;\r\n      const doesItemExist = state.items.find(\r\n        (item) => item.id === itemToBeAdded.id\r\n      );\r\n      if (!doesItemExist) {\r\n        state.items.push(itemToBeAdded);\r\n      } else {\r\n        const indexOfItem = current(state).items.findIndex(\r\n          (item) => item.id === itemToBeAdded.id\r\n        );\r\n        state.items[indexOfItem].quantity++;\r\n      }\r\n      state.totalQuantity++;\r\n      state.totalPrice = state.totalPrice + itemToBeAdded.price;\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const itemToBeRemoved = action.payload;\r\n      const indexOfItem = state.items.findIndex(\r\n        (item) => item.id === itemToBeRemoved.id\r\n      );\r\n      if (state.items[indexOfItem].quantity === 1) {\r\n        state.items = state.items.filter(\r\n          (item) => item.id !== itemToBeRemoved.id\r\n        );\r\n      } else {\r\n        state.items[indexOfItem].quantity--;\r\n      }\r\n      state.totalQuantity--;\r\n      state.totalPrice = state.totalPrice - itemToBeRemoved.price;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartItemsActions = cartItemsSlice.actions;\r\n\r\nexport default cartItemsSlice;\r\n"]},"metadata":{},"sourceType":"module"}