{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"../../hooks/useHttp\";\nimport useInput from \"../../hooks/useInput\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  let isFormValid = false;\n  const [isLogin, setIsLogin] = useState(true);\n  const {\n    data,\n    error,\n    status,\n    sendRequest\n  } = useHttp();\n  const loading = status !== \"completed\";\n  useEffect(() => {\n    if (status === \"completed\") {\n      console.log(data);\n    }\n  }, [status, data]);\n  const {\n    inputValue: emailInput,\n    isInputValid: isEmailValid,\n    isInputTouched: isEmailTouched,\n    handleInputChange: handleEmailChange,\n    handleInputBlur: handleEmailBlur\n  } = useInput(email => email.trim() !== \"\" && email.includes(\"@\") && email.includes(\".\"));\n  const {\n    inputValue: passwordInput,\n    isInputValid: isPasswordValid,\n    isInputTouched: isPasswordTouched,\n    handleInputChange: handlePasswordChange,\n    handleInputBlur: handlePasswordBlur\n  } = useInput(pass => pass.length > 7);\n\n  if (isEmailValid && isPasswordValid) {\n    isFormValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n\n    if (isLogin) {\n      //...login\n      console.log(\"login\");\n    } else {\n      //...signup\n      console.log(\"signup\");\n      const newUser = {\n        id: new Date().getTime(),\n        email: emailInput,\n        password: passwordInput\n      };\n      sendRequest({\n        url: \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\",\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: newUser\n      });\n    }\n  } //DOM helpers\n\n\n  const invalidEmail = isEmailTouched && !isEmailValid;\n  const invalidPassword = isPasswordTouched && !isPasswordValid;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [status, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            className: invalidEmail ? classes.invalid : classes.valid,\n            value: emailInput,\n            onChange: handleEmailChange,\n            onBlur: handleEmailBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), invalidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.errorText,\n            children: \"Enter a valid email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: invalidPassword ? classes.invalid : \"\",\n            value: passwordInput,\n            onChange: handlePasswordChange,\n            onBlur: handlePasswordBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), invalidPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.errorText,\n            children: \"Password must be more than 7 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn login-btn\",\n            disabled: !isFormValid,\n            type: \"submit\",\n            children: isLogin ? \"Login\" : \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.toggle,\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Create new account\" : \"Login with existing account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuthForm, \"sfIjbPGdbqXEcGZBSbImEfLR/0M=\", false, function () {\n  return [useHttp, useInput, useInput];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/components/Auth/AuthForm.js"],"names":["useEffect","useState","useHttp","useInput","classes","AuthForm","isFormValid","isLogin","setIsLogin","data","error","status","sendRequest","loading","console","log","inputValue","emailInput","isInputValid","isEmailValid","isInputTouched","isEmailTouched","handleInputChange","handleEmailChange","handleInputBlur","handleEmailBlur","email","trim","includes","passwordInput","isPasswordValid","isPasswordTouched","handlePasswordChange","handlePasswordBlur","pass","length","switchAuthModeHandler","prevState","handleFormSubmit","e","preventDefault","newUser","id","Date","getTime","password","url","method","headers","body","invalidEmail","invalidPassword","auth","control","invalid","valid","errorText","actions","toggle"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useHttp from \"../../hooks/useHttp\";\nimport useInput from \"../../hooks/useInput\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  let isFormValid = false;\n  const [isLogin, setIsLogin] = useState(true);\n  const { data, error, status, sendRequest } = useHttp();\n  const loading = status !== \"completed\";\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      console.log(data);\n    }\n  }, [status, data]);\n\n  const {\n    inputValue: emailInput,\n    isInputValid: isEmailValid,\n    isInputTouched: isEmailTouched,\n    handleInputChange: handleEmailChange,\n    handleInputBlur: handleEmailBlur,\n  } = useInput(\n    (email) => email.trim() !== \"\" && email.includes(\"@\") && email.includes(\".\")\n  );\n\n  const {\n    inputValue: passwordInput,\n    isInputValid: isPasswordValid,\n    isInputTouched: isPasswordTouched,\n    handleInputChange: handlePasswordChange,\n    handleInputBlur: handlePasswordBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  if (isEmailValid && isPasswordValid) {\n    isFormValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n\n    if (isLogin) {\n      //...login\n      console.log(\"login\");\n    } else {\n      //...signup\n      console.log(\"signup\");\n      const newUser = {\n        id: new Date().getTime(),\n        email: emailInput,\n        password: passwordInput,\n      };\n      sendRequest({\n        url: \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\",\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: newUser,\n      });\n    }\n  }\n\n  //DOM helpers\n  const invalidEmail = isEmailTouched && !isEmailValid;\n  const invalidPassword = isPasswordTouched && !isPasswordValid;\n\n  return (\n    <>\n      {status}\n      <section className={classes.auth}>\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n        <form onSubmit={handleFormSubmit}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Your Email</label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              className={invalidEmail ? classes.invalid : classes.valid}\n              value={emailInput}\n              onChange={handleEmailChange}\n              onBlur={handleEmailBlur}\n            />\n            {invalidEmail && (\n              <p className={classes.errorText}>Enter a valid email</p>\n            )}\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Your Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              className={invalidPassword ? classes.invalid : \"\"}\n              value={passwordInput}\n              onChange={handlePasswordChange}\n              onBlur={handlePasswordBlur}\n            />\n            {invalidPassword && (\n              <p className={classes.errorText}>\n                Password must be more than 7 characters\n              </p>\n            )}\n          </div>\n          <div className={classes.actions}>\n            <button\n              className=\"btn login-btn\"\n              disabled={!isFormValid}\n              type=\"submit\"\n            >\n              {isLogin ? \"Login\" : \"Create Account\"}\n            </button>\n            <button\n              type=\"button\"\n              className={classes.toggle}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\n            </button>\n          </div>\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}