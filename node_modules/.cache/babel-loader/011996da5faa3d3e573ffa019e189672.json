{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\Practice React\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"./components/UI/Notification\";\nimport { useEffect } from \"react\";\nimport { sendCartData } from \"./store/cartActionsThunks\"; //prevent sending request on first time\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.cart.isCartVisible);\n  const notification = useSelector(state => state.cart.notification);\n  const cart = useSelector(state => state.cartItem);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"bSrdhXnc9p2qJylI/Xq5JndRvEk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/Practice React/src/App.js"],"names":["Cart","Layout","Products","useDispatch","useSelector","Notification","useEffect","sendCartData","isInitial","App","dispatch","showCart","state","cart","isCartVisible","notification","cartItem","status","title","message"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;;;AACA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,aAAvB,CAA5B;AACA,QAAMC,YAAY,GAAGX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWE,YAAvB,CAAhC;AACA,QAAMF,IAAI,GAAGT,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACI,QAAlB,CAAxB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDE,IAAAA,QAAQ,CAACH,YAAY,CAACM,IAAD,CAAb,CAAR;AACD,GAPQ,EAON,CAACA,IAAD,EAAOH,QAAP,CAPM,CAAT;AASA,sBACE;AAAA,eACGK,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACE,MADvB;AAEE,MAAA,KAAK,EAAEF,YAAY,CAACG,KAFtB;AAGE,MAAA,OAAO,EAAEH,YAAY,CAACI;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACGR,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAeD;;GA9BQF,G;UACUN,W,EACAC,W,EACIA,W,EACRA,W;;;KAJNK,G;AAgCT,eAAeA,GAAf","sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"./components/UI/Notification\";\nimport { useEffect } from \"react\";\nimport { sendCartData } from \"./store/cartActionsThunks\";\n\n//prevent sending request on first time\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.cart.isCartVisible);\n  const notification = useSelector((state) => state.cart.notification);\n  const cart = useSelector((state) => state.cartItem);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}