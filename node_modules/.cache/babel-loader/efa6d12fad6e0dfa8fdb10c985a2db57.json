{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Notification from \"../components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  email: \"\",\n  token: \"\",\n  isLoggedIn: \"\",\n  login: loginConfig => {},\n  //loginConfig => {email: \"\", token: \"\"}\n  logout: () => {},\n  logoutNotification: \"\"\n});\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const isLoggedIn = !!token;\n\n  function loginHandler(loginConfig) {\n    const {\n      email,\n      token\n    } = loginConfig;\n    setToken(token);\n    setEmail(email);\n  }\n\n  function logoutHandler() {\n    setToken(null);\n    setEmail(null);\n    setNotification( /*#__PURE__*/_jsxDEV(Notification, {\n      heading: \"Success\",\n      message: \"You have been logout successfully !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n    console.log(notification);\n  }\n\n  const contextValue = {\n    email: email,\n    token: token,\n    isLoggedIn: isLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    logoutNotification: notification\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"FCyFLEz/UEaM36OhBo19Cvdc7t4=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/store/auth-context.js"],"names":["React","useState","Notification","AuthContext","createContext","email","token","isLoggedIn","login","loginConfig","logout","logoutNotification","AuthContextProvider","props","setToken","setEmail","notification","setNotification","loginHandler","logoutHandler","console","log","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,KAAK,EAAE,EAFsC;AAG7CC,EAAAA,UAAU,EAAE,EAHiC;AAI7CC,EAAAA,KAAK,EAAGC,WAAD,IAAiB,CAAE,CAJmB;AAIjB;AAC5BC,EAAAA,MAAM,EAAE,MAAM,CAAE,CAL6B;AAM7CC,EAAAA,kBAAkB,EAAE;AANyB,CAApB,CAApB;;AASP,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQU,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMM,UAAU,GAAG,CAAC,CAACD,KAArB;;AAEA,WAASY,YAAT,CAAsBT,WAAtB,EAAmC;AACjC,UAAM;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBG,WAAzB;AACAK,IAAAA,QAAQ,CAACR,KAAD,CAAR;AACAS,IAAAA,QAAQ,CAACV,KAAD,CAAR;AACD;;AAED,WAASc,aAAT,GAAyB;AACvBL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,eAAe,eACb,QAAC,YAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YADa,CAAf;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACD;;AAED,QAAMM,YAAY,GAAG;AACnBjB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,KAAK,EAAEA,KAFY;AAGnBC,IAAAA,UAAU,EAAEA,UAHO;AAInBC,IAAAA,KAAK,EAAEU,YAJY;AAKnBR,IAAAA,MAAM,EAAES,aALW;AAMnBR,IAAAA,kBAAkB,EAAEK;AAND,GAArB;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCD;;GAAMX,mB;;KAAAA,mB;AAyCN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Notification from \"../components/UI/Notification\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  email: \"\",\r\n  token: \"\",\r\n  isLoggedIn: \"\",\r\n  login: (loginConfig) => {}, //loginConfig => {email: \"\", token: \"\"}\r\n  logout: () => {},\r\n  logoutNotification: \"\",\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [token, setToken] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const isLoggedIn = !!token;\r\n\r\n  function loginHandler(loginConfig) {\r\n    const { email, token } = loginConfig;\r\n    setToken(token);\r\n    setEmail(email);\r\n  }\r\n\r\n  function logoutHandler() {\r\n    setToken(null);\r\n    setEmail(null);\r\n    setNotification(\r\n      <Notification\r\n        heading=\"Success\"\r\n        message=\"You have been logout successfully !\"\r\n      />\r\n    );\r\n    console.log(notification);\r\n  }\r\n\r\n  const contextValue = {\r\n    email: email,\r\n    token: token,\r\n    isLoggedIn: isLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    logoutNotification: notification,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}