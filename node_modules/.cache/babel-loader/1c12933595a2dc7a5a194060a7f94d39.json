{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ProfileForm.module.css\";\nimport useInput from \"../../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  let isFormValid = false;\n  let bothPassDontMatchError = \"\";\n  const {\n    inputValue: newPassInput,\n    isInputTouched: isNewPassTouched,\n    isInputValid: isNewPassValid,\n    handleInputChange: handleNewPassChange,\n    handleInputBlur: handleNewPassBlur\n  } = useInput(pass => pass.length > 7);\n  const {\n    inputValue: confirmPassInput,\n    isInputTouched: isConfirmPassTouched,\n    isInputValid: isConfirmPassValid,\n    handleInputChange: handleConfirmPassChange,\n    handleInputBlur: handleConfirmPassBlur\n  } = useInput(pass => pass.length > 7);\n\n  if (isNewPassValid && isConfirmPassValid) {\n    isFormValid = true;\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit\"); //checking if both passwords match\n\n    if (newPassInput !== confirmPassInput) {\n      bothPassDontMatchError = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Both Passwords do not match ! Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  const invalidNewPass = isNewPassTouched && !isNewPassValid;\n  const invalidConfirmPass = isConfirmPassTouched && !isConfirmPassValid;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.header,\n      children: \"Password Change Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), bothPassDontMatchError, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: invalidNewPass ? classes.invalid : \"\",\n        value: newPassInput,\n        onChange: handleNewPassChange,\n        onBlur: handleNewPassBlur,\n        id: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), invalidNewPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Password must be more than 7 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password-confirm\",\n        children: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: invalidConfirmPass ? classes.invalid : \"\",\n        value: confirmPassInput,\n        onChange: handleConfirmPassChange,\n        onBlur: handleConfirmPassBlur,\n        id: \"new-password-confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), invalidConfirmPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Password must be more than 7 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        disabled: !isFormValid,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"iRqIJqAs980GAzuqxtPETIwdfXE=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/components/Profile/ProfileForm.js"],"names":["classes","useInput","ProfileForm","isFormValid","bothPassDontMatchError","inputValue","newPassInput","isInputTouched","isNewPassTouched","isInputValid","isNewPassValid","handleInputChange","handleNewPassChange","handleInputBlur","handleNewPassBlur","pass","length","confirmPassInput","isConfirmPassTouched","isConfirmPassValid","handleConfirmPassChange","handleConfirmPassBlur","handleFormSubmit","e","preventDefault","console","log","errorText","invalidNewPass","invalidConfirmPass","form","header","control","invalid","action"],"mappings":"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","sourcesContent":["import classes from \"./ProfileForm.module.css\";\nimport useInput from \"../../hooks/useInput\";\n\nconst ProfileForm = () => {\n  let isFormValid = false;\n  let bothPassDontMatchError = \"\";\n  const {\n    inputValue: newPassInput,\n    isInputTouched: isNewPassTouched,\n    isInputValid: isNewPassValid,\n    handleInputChange: handleNewPassChange,\n    handleInputBlur: handleNewPassBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  const {\n    inputValue: confirmPassInput,\n    isInputTouched: isConfirmPassTouched,\n    isInputValid: isConfirmPassValid,\n    handleInputChange: handleConfirmPassChange,\n    handleInputBlur: handleConfirmPassBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  if (isNewPassValid && isConfirmPassValid) {\n    isFormValid = true;\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit\");\n    //checking if both passwords match\n    if (newPassInput !== confirmPassInput) {\n      bothPassDontMatchError = (\n        <p className={classes.errorText}>\n          Both Passwords do not match ! Try again\n        </p>\n      );\n    }\n  }\n\n  const invalidNewPass = isNewPassTouched && !isNewPassValid;\n  const invalidConfirmPass = isConfirmPassTouched && !isConfirmPassValid;\n\n  return (\n    <form className={classes.form} onSubmit={handleFormSubmit}>\n      <h2 className={classes.header}>Password Change Form</h2>\n      {bothPassDontMatchError}\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          className={invalidNewPass ? classes.invalid : \"\"}\n          value={newPassInput}\n          onChange={handleNewPassChange}\n          onBlur={handleNewPassBlur}\n          id=\"new-password\"\n        />\n        {invalidNewPass && (\n          <p className={classes.errorText}>\n            Password must be more than 7 characters\n          </p>\n        )}\n        <label htmlFor=\"new-password-confirm\">Confirm New Password</label>\n        <input\n          type=\"password\"\n          className={invalidConfirmPass ? classes.invalid : \"\"}\n          value={confirmPassInput}\n          onChange={handleConfirmPassChange}\n          onBlur={handleConfirmPassBlur}\n          id=\"new-password-confirm\"\n        />\n        {invalidConfirmPass && (\n          <p className={classes.errorText}>\n            Password must be more than 7 characters\n          </p>\n        )}\n      </div>\n      <div className={classes.action}>\n        <button className=\"btn\" type=\"submit\" disabled={!isFormValid}>\n          Change Password\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}