{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ProfileForm.module.css\";\nimport useInput from \"../../hooks/useInput\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  let isFormValid = false;\n  const [passDontMatch, setPassDontMatch] = useState(false);\n  const {\n    inputValue: newPassInput,\n    isInputTouched: isNewPassTouched,\n    isInputValid: isNewPassValid,\n    handleInputChange: handleNewPassChange,\n    handleInputBlur: handleNewPassBlur\n  } = useInput(pass => pass.length > 7);\n  const {\n    inputValue: confirmPassInput,\n    isInputTouched: isConfirmPassTouched,\n    isInputValid: isConfirmPassValid,\n    handleInputChange: handleConfirmPassChange,\n    handleInputBlur: handleConfirmPassBlur\n  } = useInput(pass => pass.length > 7);\n\n  if (isNewPassValid && isConfirmPassValid) {\n    isFormValid = true;\n  }\n\n  const {\n    error,\n    status,\n    sendRequest\n  } = useHttp();\n\n  function handleFormSubmit(e) {\n    e.preventDefault(); //checking if both passwords match\n\n    if (newPassInput !== confirmPassInput) {\n      setPassDontMatch(true);\n      return;\n    } //password matches send request\n\n\n    sendRequest({\n      url: \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      password: newPassInput.toString()\n    });\n  }\n\n  const invalidNewPass = isNewPassTouched && !isNewPassValid;\n  const invalidConfirmPass = isConfirmPassTouched && !isConfirmPassValid;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.header,\n      children: \"Password Change Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), passDontMatch && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: classes.errorText,\n      children: \"Passwords do not match ! Try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: invalidNewPass ? classes.invalid : \"\",\n        value: newPassInput,\n        onChange: handleNewPassChange,\n        onBlur: handleNewPassBlur,\n        id: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), invalidNewPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Password must be more than 7 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password-confirm\",\n        children: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: invalidConfirmPass ? classes.invalid : \"\",\n        value: confirmPassInput,\n        onChange: handleConfirmPassChange,\n        onBlur: handleConfirmPassBlur,\n        id: \"new-password-confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), invalidConfirmPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Password must be more than 7 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        disabled: !isFormValid,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"Fe9CwcMylEkzN05ATcuMCE1SmTA=\", false, function () {\n  return [useInput, useInput, useHttp];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/components/Profile/ProfileForm.js"],"names":["classes","useInput","useHttp","useState","ProfileForm","isFormValid","passDontMatch","setPassDontMatch","inputValue","newPassInput","isInputTouched","isNewPassTouched","isInputValid","isNewPassValid","handleInputChange","handleNewPassChange","handleInputBlur","handleNewPassBlur","pass","length","confirmPassInput","isConfirmPassTouched","isConfirmPassValid","handleConfirmPassChange","handleConfirmPassBlur","error","status","sendRequest","handleFormSubmit","e","preventDefault","url","method","headers","password","toString","invalidNewPass","invalidConfirmPass","form","header","textAlign","errorText","control","invalid","action"],"mappings":"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","sourcesContent":["import classes from \"./ProfileForm.module.css\";\nimport useInput from \"../../hooks/useInput\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { useState } from \"react\";\n\nconst ProfileForm = () => {\n  let isFormValid = false;\n  const [passDontMatch, setPassDontMatch] = useState(false);\n  const {\n    inputValue: newPassInput,\n    isInputTouched: isNewPassTouched,\n    isInputValid: isNewPassValid,\n    handleInputChange: handleNewPassChange,\n    handleInputBlur: handleNewPassBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  const {\n    inputValue: confirmPassInput,\n    isInputTouched: isConfirmPassTouched,\n    isInputValid: isConfirmPassValid,\n    handleInputChange: handleConfirmPassChange,\n    handleInputBlur: handleConfirmPassBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  if (isNewPassValid && isConfirmPassValid) {\n    isFormValid = true;\n  }\n\n  const { error, status, sendRequest } = useHttp();\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    //checking if both passwords match\n    if (newPassInput !== confirmPassInput) {\n      setPassDontMatch(true);\n      return;\n    }\n    //password matches send request\n    sendRequest({\n      url: \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=\",\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      password: newPassInput.toString(),\n    });\n  }\n\n  const invalidNewPass = isNewPassTouched && !isNewPassValid;\n  const invalidConfirmPass = isConfirmPassTouched && !isConfirmPassValid;\n\n  return (\n    <form className={classes.form} onSubmit={handleFormSubmit}>\n      <h2 className={classes.header}>Password Change Form</h2>\n      {passDontMatch && (\n        <p style={{ textAlign: \"center\" }} className={classes.errorText}>\n          Passwords do not match ! Try again\n        </p>\n      )}\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          className={invalidNewPass ? classes.invalid : \"\"}\n          value={newPassInput}\n          onChange={handleNewPassChange}\n          onBlur={handleNewPassBlur}\n          id=\"new-password\"\n        />\n        {invalidNewPass && (\n          <p className={classes.errorText}>\n            Password must be more than 7 characters\n          </p>\n        )}\n        <label htmlFor=\"new-password-confirm\">Confirm New Password</label>\n        <input\n          type=\"password\"\n          className={invalidConfirmPass ? classes.invalid : \"\"}\n          value={confirmPassInput}\n          onChange={handleConfirmPassChange}\n          onBlur={handleConfirmPassBlur}\n          id=\"new-password-confirm\"\n        />\n        {invalidConfirmPass && (\n          <p className={classes.errorText}>\n            Password must be more than 7 characters\n          </p>\n        )}\n      </div>\n      <div className={classes.action}>\n        <button className=\"btn\" type=\"submit\" disabled={!isFormValid}>\n          Change Password\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}