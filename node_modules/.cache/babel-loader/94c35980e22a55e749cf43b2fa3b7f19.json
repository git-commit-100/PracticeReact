{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../../hooks/useInput\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  let isFormValid = false;\n  const [isLogin, setIsLogin] = useState(true);\n  const {\n    inputValue: emailInput,\n    isInputValid: isEmailValid,\n    isInputTouched: isEmailTouched,\n    handleInputChange: handleEmailChange,\n    handleInputBlur: handleEmailBlur\n  } = useInput(email => email.trim() !== \"\" && email.includes(\"@\") && email.includes(\".\"));\n  const {\n    inputValue: passwordInput,\n    isInputValid: isPasswordValid,\n    isInputTouched: isPasswordTouched,\n    handleInputChange: handlePasswordChange,\n    handleInputBlur: handlePasswordBlur\n  } = useInput(pass => pass.length > 7);\n\n  if (isEmailValid && isPasswordValid) {\n    isFormValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: emailInput,\n          onChange: handleEmailChange,\n          onBlur: handleEmailBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordInput,\n          onChange: handlePasswordChange,\n          onBlur: handlePasswordBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: !isFormValid,\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"8Swv5l1gVT8158KVC771ThtKPHw=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/components/Auth/AuthForm.js"],"names":["useState","useInput","classes","AuthForm","isFormValid","isLogin","setIsLogin","inputValue","emailInput","isInputValid","isEmailValid","isInputTouched","isEmailTouched","handleInputChange","handleEmailChange","handleInputBlur","handleEmailBlur","email","trim","includes","passwordInput","isPasswordValid","isPasswordTouched","handlePasswordChange","handlePasswordBlur","pass","length","switchAuthModeHandler","prevState","handleFormSubmit","e","preventDefault","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../../hooks/useInput\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  let isFormValid = false;\n  const [isLogin, setIsLogin] = useState(true);\n  const {\n    inputValue: emailInput,\n    isInputValid: isEmailValid,\n    isInputTouched: isEmailTouched,\n    handleInputChange: handleEmailChange,\n    handleInputBlur: handleEmailBlur,\n  } = useInput(\n    (email) => email.trim() !== \"\" && email.includes(\"@\") && email.includes(\".\")\n  );\n\n  const {\n    inputValue: passwordInput,\n    isInputValid: isPasswordValid,\n    isInputTouched: isPasswordTouched,\n    handleInputChange: handlePasswordChange,\n    handleInputBlur: handlePasswordBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  if (isEmailValid && isPasswordValid) {\n    isFormValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={handleFormSubmit}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            value={emailInput}\n            onChange={handleEmailChange}\n            onBlur={handleEmailBlur}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordInput}\n            onChange={handlePasswordChange}\n            onBlur={handlePasswordBlur}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\" disabled={!isFormValid}>\n            {isLogin ? \"Login\" : \"Create Account\"}\n          </button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}