{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ProfileForm.module.css\";\nimport useInput from \"../../hooks/useInput\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport Notification from \"../UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  let isFormValid = false;\n  const [notification, setNotification] = useState(null);\n  const [passDontMatch, setPassDontMatch] = useState(false);\n  const {\n    inputValue: newPassInput,\n    isInputTouched: isNewPassTouched,\n    isInputValid: isNewPassValid,\n    handleInputChange: handleNewPassChange,\n    handleInputBlur: handleNewPassBlur\n  } = useInput(pass => pass.length > 7);\n  const {\n    inputValue: confirmPassInput,\n    isInputTouched: isConfirmPassTouched,\n    isInputValid: isConfirmPassValid,\n    handleInputChange: handleConfirmPassChange,\n    handleInputBlur: handleConfirmPassBlur\n  } = useInput(pass => pass.length > 7);\n\n  if (isNewPassValid && isConfirmPassValid) {\n    isFormValid = true;\n  }\n\n  const {\n    data,\n    error,\n    status,\n    sendRequest\n  } = useHttp();\n\n  function handleFormSubmit(e) {\n    e.preventDefault(); //checking if both passwords match\n\n    if (newPassInput !== confirmPassInput) {\n      setPassDontMatch(true);\n      return;\n    } //password matches send request\n\n\n    sendRequest({\n      url: \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      idToken: authCtx.token,\n      password: newPassInput\n    });\n  }\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      if (error) {\n        setNotification( /*#__PURE__*/_jsxDEV(Notification, {\n          heading: \"Error\",\n          type: \"error\",\n          error: {\n            message: error\n          },\n          message: error,\n          hideNotification: () => setNotification(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this));\n        return;\n      }\n\n      let {\n        error: errorFromFirebase\n      } = data;\n\n      if (errorFromFirebase) {\n        setNotification( /*#__PURE__*/_jsxDEV(Notification, {\n          heading: \"Error\",\n          type: \"error\",\n          error: errorFromFirebase,\n          hideNotification: () => setNotification(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this));\n      } //success\n\n\n      if (!error && !errorFromFirebase && data) {\n        setNotification( /*#__PURE__*/_jsxDEV(Notification, {\n          heading: \"Success\",\n          type: \"success\",\n          error: \"\",\n          message: \"Password has changed successfully ! You can now login with new Password\",\n          hideNotification: () => setNotification(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this));\n        return;\n      }\n\n      return () => {\n        //clean up function\n        //clear any previous notifications\n        setNotification(null);\n      };\n    }\n  }, [data, error, status]);\n  const invalidNewPass = isNewPassTouched && !isNewPassValid;\n  const invalidConfirmPass = isConfirmPassTouched && !isConfirmPassValid;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.header,\n      children: \"Password Change Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), passDontMatch && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: classes.errorText,\n      children: \"Passwords do not match ! Try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: invalidNewPass ? classes.invalid : \"\",\n        value: newPassInput,\n        onChange: handleNewPassChange,\n        onBlur: handleNewPassBlur,\n        id: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), invalidNewPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Password must be more than 7 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password-confirm\",\n        children: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: invalidConfirmPass ? classes.invalid : \"\",\n        value: confirmPassInput,\n        onChange: handleConfirmPassChange,\n        onBlur: handleConfirmPassBlur,\n        id: \"new-password-confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), invalidConfirmPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Password must be more than 7 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        disabled: !isFormValid,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"sjTHxjUIQqsTzpYKUHzaUDnOdc8=\", false, function () {\n  return [useInput, useInput, useHttp];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/components/Profile/ProfileForm.js"],"names":["classes","useInput","useHttp","useContext","useEffect","useState","AuthContext","Notification","ProfileForm","authCtx","isFormValid","notification","setNotification","passDontMatch","setPassDontMatch","inputValue","newPassInput","isInputTouched","isNewPassTouched","isInputValid","isNewPassValid","handleInputChange","handleNewPassChange","handleInputBlur","handleNewPassBlur","pass","length","confirmPassInput","isConfirmPassTouched","isConfirmPassValid","handleConfirmPassChange","handleConfirmPassBlur","data","error","status","sendRequest","handleFormSubmit","e","preventDefault","url","method","headers","idToken","token","password","message","errorFromFirebase","invalidNewPass","invalidConfirmPass","form","header","textAlign","errorText","control","invalid","action"],"mappings":"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","sourcesContent":["import classes from \"./ProfileForm.module.css\";\nimport useInput from \"../../hooks/useInput\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport Notification from \"../UI/Notification\";\n\nconst ProfileForm = () => {\n  const authCtx = useContext(AuthContext);\n  let isFormValid = false;\n  const [notification, setNotification] = useState(null);\n  const [passDontMatch, setPassDontMatch] = useState(false);\n  const {\n    inputValue: newPassInput,\n    isInputTouched: isNewPassTouched,\n    isInputValid: isNewPassValid,\n    handleInputChange: handleNewPassChange,\n    handleInputBlur: handleNewPassBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  const {\n    inputValue: confirmPassInput,\n    isInputTouched: isConfirmPassTouched,\n    isInputValid: isConfirmPassValid,\n    handleInputChange: handleConfirmPassChange,\n    handleInputBlur: handleConfirmPassBlur,\n  } = useInput((pass) => pass.length > 7);\n\n  if (isNewPassValid && isConfirmPassValid) {\n    isFormValid = true;\n  }\n\n  const { data, error, status, sendRequest } = useHttp();\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    //checking if both passwords match\n    if (newPassInput !== confirmPassInput) {\n      setPassDontMatch(true);\n      return;\n    }\n    //password matches send request\n    sendRequest({\n      url: \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=\",\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      idToken: authCtx.token,\n      password: newPassInput,\n    });\n  }\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      if (error) {\n        setNotification(\n          <Notification\n            heading=\"Error\"\n            type=\"error\"\n            error={{ message: error }}\n            message={error}\n            hideNotification={() => setNotification(null)}\n          />\n        );\n        return;\n      }\n\n      let { error: errorFromFirebase } = data;\n      if (errorFromFirebase) {\n        setNotification(\n          <Notification\n            heading=\"Error\"\n            type=\"error\"\n            error={errorFromFirebase}\n            hideNotification={() => setNotification(null)}\n          />\n        );\n      }\n\n      //success\n      if (!error && !errorFromFirebase && data) {\n        setNotification(\n          <Notification\n            heading=\"Success\"\n            type=\"success\"\n            error=\"\"\n            message={\n              \"Password has changed successfully ! You can now login with new Password\"\n            }\n            hideNotification={() => setNotification(null)}\n          />\n        );\n        return;\n      }\n\n      return () => {\n        //clean up function\n        //clear any previous notifications\n        setNotification(null);\n      };\n    }\n  }, [data, error, status]);\n\n  const invalidNewPass = isNewPassTouched && !isNewPassValid;\n  const invalidConfirmPass = isConfirmPassTouched && !isConfirmPassValid;\n\n  return (\n    <form className={classes.form} onSubmit={handleFormSubmit}>\n      <h2 className={classes.header}>Password Change Form</h2>\n      {passDontMatch && (\n        <p style={{ textAlign: \"center\" }} className={classes.errorText}>\n          Passwords do not match ! Try again\n        </p>\n      )}\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          className={invalidNewPass ? classes.invalid : \"\"}\n          value={newPassInput}\n          onChange={handleNewPassChange}\n          onBlur={handleNewPassBlur}\n          id=\"new-password\"\n        />\n        {invalidNewPass && (\n          <p className={classes.errorText}>\n            Password must be more than 7 characters\n          </p>\n        )}\n        <label htmlFor=\"new-password-confirm\">Confirm New Password</label>\n        <input\n          type=\"password\"\n          className={invalidConfirmPass ? classes.invalid : \"\"}\n          value={confirmPassInput}\n          onChange={handleConfirmPassChange}\n          onBlur={handleConfirmPassBlur}\n          id=\"new-password-confirm\"\n        />\n        {invalidConfirmPass && (\n          <p className={classes.errorText}>\n            Password must be more than 7 characters\n          </p>\n        )}\n      </div>\n      <div className={classes.action}>\n        <button className=\"btn\" type=\"submit\" disabled={!isFormValid}>\n          Change Password\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}