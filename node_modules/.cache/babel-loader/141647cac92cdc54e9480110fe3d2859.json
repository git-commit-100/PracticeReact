{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javam\\\\Desktop\\\\Development\\\\React\\\\Practice React\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  email: \"\",\n  token: \"\",\n  isLoggedIn: false,\n  login: loginConfig => {},\n  //loginConfig => {email: \"\", token: \"\"}\n  logout: () => {}\n});\n\nfunction calculateTimeToLogout(timeFromFB) {\n  const now = new Date().getTime();\n  const newTimeFromFB = +timeFromFB * 1000;\n  console.log(now + newTimeFromFB);\n}\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const getTokenFromLS = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(getTokenFromLS);\n  const [email, setEmail] = useState(null);\n  const isLoggedIn = !!token;\n\n  function loginHandler(loginConfig) {\n    const {\n      email,\n      token,\n      expiresIn\n    } = loginConfig;\n    setToken(token);\n    setEmail(email);\n    localStorage.setItem(\"token\", token);\n    calculateTimeToLogout(expiresIn);\n  }\n\n  function logoutHandler() {\n    setToken(null);\n    setEmail(null);\n    localStorage.removeItem(\"token\");\n  }\n\n  const contextValue = {\n    email: email,\n    token: token,\n    isLoggedIn: isLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"sv9dm9Lvtwe79RF2WI3nvIYjRBw=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/javam/Desktop/Development/React/Practice React/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","email","token","isLoggedIn","login","loginConfig","logout","calculateTimeToLogout","timeFromFB","now","Date","getTime","newTimeFromFB","console","log","AuthContextProvider","props","getTokenFromLS","localStorage","getItem","setToken","setEmail","loginHandler","expiresIn","setItem","logoutHandler","removeItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,KAAK,EAAE,EAFsC;AAG7CC,EAAAA,UAAU,EAAE,KAHiC;AAI7CC,EAAAA,KAAK,EAAGC,WAAD,IAAiB,CAAE,CAJmB;AAIjB;AAC5BC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAL6B,CAApB,CAApB;;AAQP,SAASC,qBAAT,CAA+BC,UAA/B,EAA2C;AACzC,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,QAAMC,aAAa,GAAG,CAACJ,UAAD,GAAc,IAApC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,GAAGG,aAAlB;AACD;;AAED,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;AAEA,QAAM,CAACjB,KAAD,EAAQkB,QAAR,IAAoBtB,QAAQ,CAACmB,cAAD,CAAlC;AACA,QAAM,CAAChB,KAAD,EAAQoB,QAAR,IAAoBvB,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMK,UAAU,GAAG,CAAC,CAACD,KAArB;;AAEA,WAASoB,YAAT,CAAsBjB,WAAtB,EAAmC;AACjC,UAAM;AAAEJ,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBqB,MAAAA;AAAhB,QAA8BlB,WAApC;AACAe,IAAAA,QAAQ,CAAClB,KAAD,CAAR;AACAmB,IAAAA,QAAQ,CAACpB,KAAD,CAAR;AACAiB,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BtB,KAA9B;AACAK,IAAAA,qBAAqB,CAACgB,SAAD,CAArB;AACD;;AAED,WAASE,aAAT,GAAyB;AACvBL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAH,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACD;;AAED,QAAMC,YAAY,GAAG;AACnB1B,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,KAAK,EAAEA,KAFY;AAGnBC,IAAAA,UAAU,EAAEA,UAHO;AAInBC,IAAAA,KAAK,EAAEkB,YAJY;AAKnBhB,IAAAA,MAAM,EAAEmB;AALW,GAArB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,YAA7B;AAAA,cACGX,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCD;;GAAMb,mB;;KAAAA,mB;AAqCN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  email: \"\",\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (loginConfig) => {}, //loginConfig => {email: \"\", token: \"\"}\r\n  logout: () => {},\r\n});\r\n\r\nfunction calculateTimeToLogout(timeFromFB) {\r\n  const now = new Date().getTime();\r\n  const newTimeFromFB = +timeFromFB * 1000;\r\n  console.log(now + newTimeFromFB);\r\n}\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const getTokenFromLS = localStorage.getItem(\"token\");\r\n\r\n  const [token, setToken] = useState(getTokenFromLS);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const isLoggedIn = !!token;\r\n\r\n  function loginHandler(loginConfig) {\r\n    const { email, token, expiresIn } = loginConfig;\r\n    setToken(token);\r\n    setEmail(email);\r\n    localStorage.setItem(\"token\", token);\r\n    calculateTimeToLogout(expiresIn);\r\n  }\r\n\r\n  function logoutHandler() {\r\n    setToken(null);\r\n    setEmail(null);\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n\r\n  const contextValue = {\r\n    email: email,\r\n    token: token,\r\n    isLoggedIn: isLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}